---
http_interactions:
- request:
    method: post
    uri: http://localhost:5279/
    body:
      encoding: UTF-8
      string: '{"method":"help","params":{"command":"resolve"}}'
    headers:
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 03 Jun 2018 01:02:29 GMT
      Content-Length:
      - '3087'
      Content-Type:
      - application/json
      Accept:
      - application/json-rpc
      Server:
      - TwistedWeb/16.6.0
      Set-Cookie:
      - TWISTED_SESSION=6ea8afbef1b516ae3ebdd3fbf064e5e7b9831a5d20bd60e9c30c1fcb0e7e1599;
        Path=/
    body:
      encoding: UTF-8
      string: |
        {
          "id": null,
          "jsonrpc": "2.0",
          "result": {
            "help": "\nResolve given LBRY URIs\n\nUsage:\n    resolve [--force] (<uri> | --uri=<uri>) [<uris>...]\n\nOptions:\n    --force  : (bool) force refresh and ignore cache\n    --uri=<uri>    : (str) uri to resolve\n    --uris=<uris>   : (list) uris to resolve\n\nReturns:\n    Dictionary of results, keyed by uri\n    '<uri>': {\n            If a resolution error occurs:\n            'error': Error message\n\n            If the uri resolves to a channel or a claim in a channel:\n            'certificate': {\n                'address': (str) claim address,\n                'amount': (float) claim amount,\n                'effective_amount': (float) claim amount including supports,\n                'claim_id': (str) claim id,\n                'claim_sequence': (int) claim sequence number,\n                'decoded_claim': (bool) whether or not the claim value was decoded,\n                'height': (int) claim height,\n                'depth': (int) claim depth,\n                'has_signature': (bool) included if decoded_claim\n                'name': (str) claim name,\n                'permanent_url': (str) permanent url of the certificate claim,\n                'supports: (list) list of supports [{'txid': (str) txid,\n                                                     'nout': (int) nout,\n                                                     'amount': (float) amount}],\n                'txid': (str) claim txid,\n                'nout': (str) claim nout,\n                'signature_is_valid': (bool), included if has_signature,\n                'value': ClaimDict if decoded, otherwise hex string\n            }\n\n            If the uri resolves to a channel:\n            'claims_in_channel': (int) number of claims in the channel,\n\n            If the uri resolves to a claim:\n            'claim': {\n                'address': (str) claim address,\n                'amount': (float) claim amount,\n                'effective_amount': (float) claim amount including supports,\n                'claim_id': (str) claim id,\n                'claim_sequence': (int) claim sequence number,\n                'decoded_claim': (bool) whether or not the claim value was decoded,\n                'height': (int) claim height,\n                'depth': (int) claim depth,\n                'has_signature': (bool) included if decoded_claim\n                'name': (str) claim name,\n                'permanent_url': (str) permanent url of the claim,\n                'channel_name': (str) channel name if claim is in a channel\n                'supports: (list) list of supports [{'txid': (str) txid,\n                                                     'nout': (int) nout,\n                                                     'amount': (float) amount}]\n                'txid': (str) claim txid,\n                'nout': (str) claim nout,\n                'signature_is_valid': (bool), included if has_signature,\n                'value': ClaimDict if decoded, otherwise hex string\n            }\n    }\n"
          }
        }
    http_version: 
  recorded_at: Sun, 03 Jun 2018 01:02:29 GMT
recorded_with: VCR 4.0.0
